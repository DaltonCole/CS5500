Terminals unused in grammar

   T_UNKNOWN
   ST_EOF


Grammar

    0 $accept: N_START $end

    1 N_START: N_PROG

    2 N_ADDOPLST: %empty
    3           | N_ADDOP N_TERM N_ADDOPLST

    4 N_ARRAY: T_ARRAY T_LBRACK N_IDXRANGE T_RBRACK T_OF N_SIMPLE

    5 N_ARRAYVAR: N_ENTIREVAR

    6 $@1: %empty

    7 N_ASSIGN: N_VARIABLE $@1 T_ASSIGN N_EXPR

    8 $@2: %empty

    9 N_BLOCK: N_VARDECPART N_PROCDECPART $@2 N_STMTPART

   10 N_BOOLCONST: T_TRUE
   11            | T_FALSE

   12 N_COMPOUND: T_BEGIN N_STMT N_STMTLST T_END

   13 $@3: %empty

   14 $@4: %empty

   15 N_CONDITION: T_IF $@3 N_EXPR $@4 N_THEN

   16 N_THEN: T_THEN N_STMT
   17       | T_THEN N_STMT N_ELSE

   18 $@5: %empty

   19 N_ELSE: T_ELSE $@5 N_STMT

   20 N_CONST: N_INTCONST
   21        | T_CHARCONST
   22        | N_BOOLCONST

   23 N_ENTIREVAR: N_VARIDENT

   24 N_EXPR: N_SIMPLEEXPR
   25       | N_SIMPLEEXPR N_RELOP N_SIMPLEEXPR

   26 N_FACTOR: N_SIGN N_VARIABLE
   27         | N_CONST
   28         | T_LPAREN N_EXPR T_RPAREN
   29         | T_NOT N_FACTOR

   30 N_IDENT: T_IDENT

   31 N_IDENTLST: %empty
   32           | T_COMMA N_IDENT N_IDENTLST

   33 N_IDX: N_INTCONST

   34 N_IDXRANGE: N_IDX T_DOTDOT N_IDX

   35 $@6: %empty

   36 N_IDXVAR: N_ARRAYVAR $@6 T_LBRACK N_EXPR T_RBRACK

   37 N_INPUTLST: %empty
   38           | T_COMMA N_INPUTVAR N_INPUTLST

   39 N_INPUTVAR: N_VARIABLE

   40 N_INTCONST: N_SIGN T_INTCONST

   41 N_MULTOPLST: %empty
   42            | N_MULTOP N_FACTOR N_MULTOPLST

   43 N_OUTPUT: N_EXPR

   44 N_OUTPUTLST: %empty
   45            | T_COMMA N_OUTPUT N_OUTPUTLST

   46 N_PROCDEC: N_PROCHDR N_BLOCK

   47 N_PROCHDR: T_PROC T_IDENT T_SCOLON

   48 N_PROCDECPART: %empty
   49              | N_PROCDEC T_SCOLON N_PROCDECPART

   50 N_PROCIDENT: T_IDENT

   51 N_PROCSTMT: N_PROCIDENT

   52 $@7: %empty

   53 N_PROG: N_PROGLBL T_IDENT T_SCOLON $@7 N_BLOCK T_DOT

   54 N_PROGLBL: T_PROG

   55 N_READ: T_READ T_LPAREN N_INPUTVAR N_INPUTLST T_RPAREN

   56 N_RELOP: T_LT
   57        | T_GT
   58        | T_LE
   59        | T_GE
   60        | T_EQ
   61        | T_NE

   62 N_SIGN: %empty
   63       | T_PLUS
   64       | T_MINUS

   65 N_SIMPLE: T_INT
   66         | T_CHAR
   67         | T_BOOL

   68 N_SIMPLEEXPR: N_TERM N_ADDOPLST

   69 N_STMT: N_ASSIGN
   70       | N_PROCSTMT
   71       | N_READ
   72       | N_WRITE
   73       | N_CONDITION
   74       | N_WHILE
   75       | N_COMPOUND

   76 N_STMTLST: %empty
   77          | T_SCOLON N_STMT N_STMTLST

   78 N_STMTPART: N_COMPOUND

   79 N_TERM: N_FACTOR N_MULTOPLST

   80 N_TYPE: N_SIMPLE
   81       | N_ARRAY

   82 N_VARDEC: N_IDENT N_IDENTLST T_COLON N_TYPE

   83 N_VARDECLST: %empty
   84            | N_VARDEC T_SCOLON N_VARDECLST

   85 N_VARDECPART: %empty
   86             | T_VAR N_VARDEC T_SCOLON N_VARDECLST

   87 N_VARIABLE: N_ENTIREVAR
   88           | N_IDXVAR

   89 N_VARIDENT: T_IDENT

   90 $@8: %empty

   91 $@9: %empty

   92 N_WHILE: T_WHILE $@8 N_EXPR $@9 T_DO N_STMT

   93 N_WRITE: T_WRITE T_LPAREN N_OUTPUT N_OUTPUTLST T_RPAREN

   94 N_ADDOP: N_ADD_OP_LOGICAL
   95        | N_ADD_OP_ARITHMETIC

   96 N_ADD_OP_LOGICAL: T_OR

   97 N_ADD_OP_ARITHMETIC: T_PLUS
   98                    | T_MINUS

   99 N_MULTOP: N_MULT_OP_LOGICAL
  100         | N_MULT_OP_ARITHMETIC

  101 N_MULT_OP_LOGICAL: T_AND

  102 N_MULT_OP_ARITHMETIC: T_MULT
  103                     | T_DIV


Terminals, with rules where they appear

$end (0) 0
error (256)
T_LPAREN (258) 28 55 93
T_RPAREN (259) 28 55 93
T_MULT (260) 102
T_PLUS (261) 63 97
T_COMMA (262) 32 38 45
T_MINUS (263) 64 98
T_DOT (264) 53
T_DOTDOT (265) 34
T_COLON (266) 82
T_ASSIGN (267) 7
T_SCOLON (268) 47 49 53 77 84 86
T_LT (269) 56
T_LE (270) 58
T_NE (271) 61
T_EQ (272) 60
T_GT (273) 57
T_GE (274) 59
T_LBRACK (275) 4 36
T_RBRACK (276) 4 36
T_DO (277) 92
T_AND (278) 101
T_ARRAY (279) 4
T_BEGIN (280) 12
T_BOOL (281) 67
T_CHAR (282) 66
T_CHARCONST (283) 21
T_DIV (284) 103
T_END (285) 12
T_FALSE (286) 11
T_IDENT (287) 30 47 50 53 89
T_IF (288) 15
T_INT (289) 65
T_INTCONST (290) 40
T_NOT (291) 29
T_OF (292) 4
T_OR (293) 96
T_PROC (294) 47
T_PROG (295) 54
T_READ (296) 55
T_TRUE (297) 10
T_VAR (298) 86
T_WHILE (299) 92
T_WRITE (300) 93
T_UNKNOWN (301)
ST_EOF (302)
T_THEN (303) 16 17
T_ELSE (304) 19


Nonterminals, with rules where they appear

$accept (50)
    on left: 0
N_START (51)
    on left: 1, on right: 0
N_ADDOPLST (52)
    on left: 2 3, on right: 3 68
N_ARRAY (53)
    on left: 4, on right: 81
N_ARRAYVAR (54)
    on left: 5, on right: 36
N_ASSIGN (55)
    on left: 7, on right: 69
$@1 (56)
    on left: 6, on right: 7
N_BLOCK (57)
    on left: 9, on right: 46 53
$@2 (58)
    on left: 8, on right: 9
N_BOOLCONST (59)
    on left: 10 11, on right: 22
N_COMPOUND (60)
    on left: 12, on right: 75 78
N_CONDITION (61)
    on left: 15, on right: 73
$@3 (62)
    on left: 13, on right: 15
$@4 (63)
    on left: 14, on right: 15
N_THEN (64)
    on left: 16 17, on right: 15
N_ELSE (65)
    on left: 19, on right: 17
$@5 (66)
    on left: 18, on right: 19
N_CONST (67)
    on left: 20 21 22, on right: 27
N_ENTIREVAR (68)
    on left: 23, on right: 5 87
N_EXPR (69)
    on left: 24 25, on right: 7 15 28 36 43 92
N_FACTOR (70)
    on left: 26 27 28 29, on right: 29 42 79
N_IDENT (71)
    on left: 30, on right: 32 82
N_IDENTLST (72)
    on left: 31 32, on right: 32 82
N_IDX (73)
    on left: 33, on right: 34
N_IDXRANGE (74)
    on left: 34, on right: 4
N_IDXVAR (75)
    on left: 36, on right: 88
$@6 (76)
    on left: 35, on right: 36
N_INPUTLST (77)
    on left: 37 38, on right: 38 55
N_INPUTVAR (78)
    on left: 39, on right: 38 55
N_INTCONST (79)
    on left: 40, on right: 20 33
N_MULTOPLST (80)
    on left: 41 42, on right: 42 79
N_OUTPUT (81)
    on left: 43, on right: 45 93
N_OUTPUTLST (82)
    on left: 44 45, on right: 45 93
N_PROCDEC (83)
    on left: 46, on right: 49
N_PROCHDR (84)
    on left: 47, on right: 46
N_PROCDECPART (85)
    on left: 48 49, on right: 9 49
N_PROCIDENT (86)
    on left: 50, on right: 51
N_PROCSTMT (87)
    on left: 51, on right: 70
N_PROG (88)
    on left: 53, on right: 1
$@7 (89)
    on left: 52, on right: 53
N_PROGLBL (90)
    on left: 54, on right: 53
N_READ (91)
    on left: 55, on right: 71
N_RELOP (92)
    on left: 56 57 58 59 60 61, on right: 25
N_SIGN (93)
    on left: 62 63 64, on right: 26 40
N_SIMPLE (94)
    on left: 65 66 67, on right: 4 80
N_SIMPLEEXPR (95)
    on left: 68, on right: 24 25
N_STMT (96)
    on left: 69 70 71 72 73 74 75, on right: 12 16 17 19 77 92
N_STMTLST (97)
    on left: 76 77, on right: 12 77
N_STMTPART (98)
    on left: 78, on right: 9
N_TERM (99)
    on left: 79, on right: 3 68
N_TYPE (100)
    on left: 80 81, on right: 82
N_VARDEC (101)
    on left: 82, on right: 84 86
N_VARDECLST (102)
    on left: 83 84, on right: 84 86
N_VARDECPART (103)
    on left: 85 86, on right: 9
N_VARIABLE (104)
    on left: 87 88, on right: 7 26 39
N_VARIDENT (105)
    on left: 89, on right: 23
N_WHILE (106)
    on left: 92, on right: 74
$@8 (107)
    on left: 90, on right: 92
$@9 (108)
    on left: 91, on right: 92
N_WRITE (109)
    on left: 93, on right: 72
N_ADDOP (110)
    on left: 94 95, on right: 3
N_ADD_OP_LOGICAL (111)
    on left: 96, on right: 94
N_ADD_OP_ARITHMETIC (112)
    on left: 97 98, on right: 95
N_MULTOP (113)
    on left: 99 100, on right: 42
N_MULT_OP_LOGICAL (114)
    on left: 101, on right: 99
N_MULT_OP_ARITHMETIC (115)
    on left: 102 103, on right: 100


State 0

    0 $accept: . N_START $end

    T_PROG  shift, and go to state 1

    N_START    go to state 2
    N_PROG     go to state 3
    N_PROGLBL  go to state 4


State 1

   54 N_PROGLBL: T_PROG .

    $default  reduce using rule 54 (N_PROGLBL)


State 2

    0 $accept: N_START . $end

    $end  shift, and go to state 5


State 3

    1 N_START: N_PROG .

    $default  reduce using rule 1 (N_START)


State 4

   53 N_PROG: N_PROGLBL . T_IDENT T_SCOLON $@7 N_BLOCK T_DOT

    T_IDENT  shift, and go to state 6


State 5

    0 $accept: N_START $end .

    $default  accept


State 6

   53 N_PROG: N_PROGLBL T_IDENT . T_SCOLON $@7 N_BLOCK T_DOT

    T_SCOLON  shift, and go to state 7


State 7

   53 N_PROG: N_PROGLBL T_IDENT T_SCOLON . $@7 N_BLOCK T_DOT

    $default  reduce using rule 52 ($@7)

    $@7  go to state 8


State 8

   53 N_PROG: N_PROGLBL T_IDENT T_SCOLON $@7 . N_BLOCK T_DOT

    T_VAR  shift, and go to state 9

    $default  reduce using rule 85 (N_VARDECPART)

    N_BLOCK       go to state 10
    N_VARDECPART  go to state 11


State 9

   86 N_VARDECPART: T_VAR . N_VARDEC T_SCOLON N_VARDECLST

    T_IDENT  shift, and go to state 12

    N_IDENT   go to state 13
    N_VARDEC  go to state 14


State 10

   53 N_PROG: N_PROGLBL T_IDENT T_SCOLON $@7 N_BLOCK . T_DOT

    T_DOT  shift, and go to state 15


State 11

    9 N_BLOCK: N_VARDECPART . N_PROCDECPART $@2 N_STMTPART

    T_PROC  shift, and go to state 16

    $default  reduce using rule 48 (N_PROCDECPART)

    N_PROCDEC      go to state 17
    N_PROCHDR      go to state 18
    N_PROCDECPART  go to state 19


State 12

   30 N_IDENT: T_IDENT .

    $default  reduce using rule 30 (N_IDENT)


State 13

   82 N_VARDEC: N_IDENT . N_IDENTLST T_COLON N_TYPE

    T_COMMA  shift, and go to state 20

    $default  reduce using rule 31 (N_IDENTLST)

    N_IDENTLST  go to state 21


State 14

   86 N_VARDECPART: T_VAR N_VARDEC . T_SCOLON N_VARDECLST

    T_SCOLON  shift, and go to state 22


State 15

   53 N_PROG: N_PROGLBL T_IDENT T_SCOLON $@7 N_BLOCK T_DOT .

    $default  reduce using rule 53 (N_PROG)


State 16

   47 N_PROCHDR: T_PROC . T_IDENT T_SCOLON

    T_IDENT  shift, and go to state 23


State 17

   49 N_PROCDECPART: N_PROCDEC . T_SCOLON N_PROCDECPART

    T_SCOLON  shift, and go to state 24


State 18

   46 N_PROCDEC: N_PROCHDR . N_BLOCK

    T_VAR  shift, and go to state 9

    $default  reduce using rule 85 (N_VARDECPART)

    N_BLOCK       go to state 25
    N_VARDECPART  go to state 11


State 19

    9 N_BLOCK: N_VARDECPART N_PROCDECPART . $@2 N_STMTPART

    $default  reduce using rule 8 ($@2)

    $@2  go to state 26


State 20

   32 N_IDENTLST: T_COMMA . N_IDENT N_IDENTLST

    T_IDENT  shift, and go to state 12

    N_IDENT  go to state 27


State 21

   82 N_VARDEC: N_IDENT N_IDENTLST . T_COLON N_TYPE

    T_COLON  shift, and go to state 28


State 22

   86 N_VARDECPART: T_VAR N_VARDEC T_SCOLON . N_VARDECLST

    T_IDENT  shift, and go to state 12

    $default  reduce using rule 83 (N_VARDECLST)

    N_IDENT      go to state 13
    N_VARDEC     go to state 29
    N_VARDECLST  go to state 30


State 23

   47 N_PROCHDR: T_PROC T_IDENT . T_SCOLON

    T_SCOLON  shift, and go to state 31


State 24

   49 N_PROCDECPART: N_PROCDEC T_SCOLON . N_PROCDECPART

    T_PROC  shift, and go to state 16

    $default  reduce using rule 48 (N_PROCDECPART)

    N_PROCDEC      go to state 17
    N_PROCHDR      go to state 18
    N_PROCDECPART  go to state 32


State 25

   46 N_PROCDEC: N_PROCHDR N_BLOCK .

    $default  reduce using rule 46 (N_PROCDEC)


State 26

    9 N_BLOCK: N_VARDECPART N_PROCDECPART $@2 . N_STMTPART

    T_BEGIN  shift, and go to state 33

    N_COMPOUND  go to state 34
    N_STMTPART  go to state 35


State 27

   32 N_IDENTLST: T_COMMA N_IDENT . N_IDENTLST

    T_COMMA  shift, and go to state 20

    $default  reduce using rule 31 (N_IDENTLST)

    N_IDENTLST  go to state 36


State 28

   82 N_VARDEC: N_IDENT N_IDENTLST T_COLON . N_TYPE

    T_ARRAY  shift, and go to state 37
    T_BOOL   shift, and go to state 38
    T_CHAR   shift, and go to state 39
    T_INT    shift, and go to state 40

    N_ARRAY   go to state 41
    N_SIMPLE  go to state 42
    N_TYPE    go to state 43


State 29

   84 N_VARDECLST: N_VARDEC . T_SCOLON N_VARDECLST

    T_SCOLON  shift, and go to state 44


State 30

   86 N_VARDECPART: T_VAR N_VARDEC T_SCOLON N_VARDECLST .

    $default  reduce using rule 86 (N_VARDECPART)


State 31

   47 N_PROCHDR: T_PROC T_IDENT T_SCOLON .

    $default  reduce using rule 47 (N_PROCHDR)


State 32

   49 N_PROCDECPART: N_PROCDEC T_SCOLON N_PROCDECPART .

    $default  reduce using rule 49 (N_PROCDECPART)


State 33

   12 N_COMPOUND: T_BEGIN . N_STMT N_STMTLST T_END

    T_BEGIN  shift, and go to state 33
    T_IDENT  shift, and go to state 45
    T_IF     shift, and go to state 46
    T_READ   shift, and go to state 47
    T_WHILE  shift, and go to state 48
    T_WRITE  shift, and go to state 49

    N_ARRAYVAR   go to state 50
    N_ASSIGN     go to state 51
    N_COMPOUND   go to state 52
    N_CONDITION  go to state 53
    N_ENTIREVAR  go to state 54
    N_IDXVAR     go to state 55
    N_PROCIDENT  go to state 56
    N_PROCSTMT   go to state 57
    N_READ       go to state 58
    N_STMT       go to state 59
    N_VARIABLE   go to state 60
    N_VARIDENT   go to state 61
    N_WHILE      go to state 62
    N_WRITE      go to state 63


State 34

   78 N_STMTPART: N_COMPOUND .

    $default  reduce using rule 78 (N_STMTPART)


State 35

    9 N_BLOCK: N_VARDECPART N_PROCDECPART $@2 N_STMTPART .

    $default  reduce using rule 9 (N_BLOCK)


State 36

   32 N_IDENTLST: T_COMMA N_IDENT N_IDENTLST .

    $default  reduce using rule 32 (N_IDENTLST)


State 37

    4 N_ARRAY: T_ARRAY . T_LBRACK N_IDXRANGE T_RBRACK T_OF N_SIMPLE

    T_LBRACK  shift, and go to state 64


State 38

   67 N_SIMPLE: T_BOOL .

    $default  reduce using rule 67 (N_SIMPLE)


State 39

   66 N_SIMPLE: T_CHAR .

    $default  reduce using rule 66 (N_SIMPLE)


State 40

   65 N_SIMPLE: T_INT .

    $default  reduce using rule 65 (N_SIMPLE)


State 41

   81 N_TYPE: N_ARRAY .

    $default  reduce using rule 81 (N_TYPE)


State 42

   80 N_TYPE: N_SIMPLE .

    $default  reduce using rule 80 (N_TYPE)


State 43

   82 N_VARDEC: N_IDENT N_IDENTLST T_COLON N_TYPE .

    $default  reduce using rule 82 (N_VARDEC)


State 44

   84 N_VARDECLST: N_VARDEC T_SCOLON . N_VARDECLST

    T_IDENT  shift, and go to state 12

    $default  reduce using rule 83 (N_VARDECLST)

    N_IDENT      go to state 13
    N_VARDEC     go to state 29
    N_VARDECLST  go to state 65


State 45

   50 N_PROCIDENT: T_IDENT .
   89 N_VARIDENT: T_IDENT .

    T_ASSIGN  reduce using rule 89 (N_VARIDENT)
    T_LBRACK  reduce using rule 89 (N_VARIDENT)
    $default  reduce using rule 50 (N_PROCIDENT)


State 46

   15 N_CONDITION: T_IF . $@3 N_EXPR $@4 N_THEN

    $default  reduce using rule 13 ($@3)

    $@3  go to state 66


State 47

   55 N_READ: T_READ . T_LPAREN N_INPUTVAR N_INPUTLST T_RPAREN

    T_LPAREN  shift, and go to state 67


State 48

   92 N_WHILE: T_WHILE . $@8 N_EXPR $@9 T_DO N_STMT

    $default  reduce using rule 90 ($@8)

    $@8  go to state 68


State 49

   93 N_WRITE: T_WRITE . T_LPAREN N_OUTPUT N_OUTPUTLST T_RPAREN

    T_LPAREN  shift, and go to state 69


State 50

   36 N_IDXVAR: N_ARRAYVAR . $@6 T_LBRACK N_EXPR T_RBRACK

    $default  reduce using rule 35 ($@6)

    $@6  go to state 70


State 51

   69 N_STMT: N_ASSIGN .

    $default  reduce using rule 69 (N_STMT)


State 52

   75 N_STMT: N_COMPOUND .

    $default  reduce using rule 75 (N_STMT)


State 53

   73 N_STMT: N_CONDITION .

    $default  reduce using rule 73 (N_STMT)


State 54

    5 N_ARRAYVAR: N_ENTIREVAR .
   87 N_VARIABLE: N_ENTIREVAR .

    T_LBRACK  reduce using rule 5 (N_ARRAYVAR)
    $default  reduce using rule 87 (N_VARIABLE)


State 55

   88 N_VARIABLE: N_IDXVAR .

    $default  reduce using rule 88 (N_VARIABLE)


State 56

   51 N_PROCSTMT: N_PROCIDENT .

    $default  reduce using rule 51 (N_PROCSTMT)


State 57

   70 N_STMT: N_PROCSTMT .

    $default  reduce using rule 70 (N_STMT)


State 58

   71 N_STMT: N_READ .

    $default  reduce using rule 71 (N_STMT)


State 59

   12 N_COMPOUND: T_BEGIN N_STMT . N_STMTLST T_END

    T_SCOLON  shift, and go to state 71

    $default  reduce using rule 76 (N_STMTLST)

    N_STMTLST  go to state 72


State 60

    7 N_ASSIGN: N_VARIABLE . $@1 T_ASSIGN N_EXPR

    $default  reduce using rule 6 ($@1)

    $@1  go to state 73


State 61

   23 N_ENTIREVAR: N_VARIDENT .

    $default  reduce using rule 23 (N_ENTIREVAR)


State 62

   74 N_STMT: N_WHILE .

    $default  reduce using rule 74 (N_STMT)


State 63

   72 N_STMT: N_WRITE .

    $default  reduce using rule 72 (N_STMT)


State 64

    4 N_ARRAY: T_ARRAY T_LBRACK . N_IDXRANGE T_RBRACK T_OF N_SIMPLE

    T_PLUS   shift, and go to state 74
    T_MINUS  shift, and go to state 75

    $default  reduce using rule 62 (N_SIGN)

    N_IDX       go to state 76
    N_IDXRANGE  go to state 77
    N_INTCONST  go to state 78
    N_SIGN      go to state 79


State 65

   84 N_VARDECLST: N_VARDEC T_SCOLON N_VARDECLST .

    $default  reduce using rule 84 (N_VARDECLST)


State 66

   15 N_CONDITION: T_IF $@3 . N_EXPR $@4 N_THEN

    T_LPAREN     shift, and go to state 80
    T_PLUS       shift, and go to state 74
    T_MINUS      shift, and go to state 75
    T_CHARCONST  shift, and go to state 81
    T_FALSE      shift, and go to state 82
    T_NOT        shift, and go to state 83
    T_TRUE       shift, and go to state 84

    $default  reduce using rule 62 (N_SIGN)

    N_BOOLCONST   go to state 85
    N_CONST       go to state 86
    N_EXPR        go to state 87
    N_FACTOR      go to state 88
    N_INTCONST    go to state 89
    N_SIGN        go to state 90
    N_SIMPLEEXPR  go to state 91
    N_TERM        go to state 92


State 67

   55 N_READ: T_READ T_LPAREN . N_INPUTVAR N_INPUTLST T_RPAREN

    T_IDENT  shift, and go to state 93

    N_ARRAYVAR   go to state 50
    N_ENTIREVAR  go to state 54
    N_IDXVAR     go to state 55
    N_INPUTVAR   go to state 94
    N_VARIABLE   go to state 95
    N_VARIDENT   go to state 61


State 68

   92 N_WHILE: T_WHILE $@8 . N_EXPR $@9 T_DO N_STMT

    T_LPAREN     shift, and go to state 80
    T_PLUS       shift, and go to state 74
    T_MINUS      shift, and go to state 75
    T_CHARCONST  shift, and go to state 81
    T_FALSE      shift, and go to state 82
    T_NOT        shift, and go to state 83
    T_TRUE       shift, and go to state 84

    $default  reduce using rule 62 (N_SIGN)

    N_BOOLCONST   go to state 85
    N_CONST       go to state 86
    N_EXPR        go to state 96
    N_FACTOR      go to state 88
    N_INTCONST    go to state 89
    N_SIGN        go to state 90
    N_SIMPLEEXPR  go to state 91
    N_TERM        go to state 92


State 69

   93 N_WRITE: T_WRITE T_LPAREN . N_OUTPUT N_OUTPUTLST T_RPAREN

    T_LPAREN     shift, and go to state 80
    T_PLUS       shift, and go to state 74
    T_MINUS      shift, and go to state 75
    T_CHARCONST  shift, and go to state 81
    T_FALSE      shift, and go to state 82
    T_NOT        shift, and go to state 83
    T_TRUE       shift, and go to state 84

    $default  reduce using rule 62 (N_SIGN)

    N_BOOLCONST   go to state 85
    N_CONST       go to state 86
    N_EXPR        go to state 97
    N_FACTOR      go to state 88
    N_INTCONST    go to state 89
    N_OUTPUT      go to state 98
    N_SIGN        go to state 90
    N_SIMPLEEXPR  go to state 91
    N_TERM        go to state 92


State 70

   36 N_IDXVAR: N_ARRAYVAR $@6 . T_LBRACK N_EXPR T_RBRACK

    T_LBRACK  shift, and go to state 99


State 71

   77 N_STMTLST: T_SCOLON . N_STMT N_STMTLST

    T_BEGIN  shift, and go to state 33
    T_IDENT  shift, and go to state 45
    T_IF     shift, and go to state 46
    T_READ   shift, and go to state 47
    T_WHILE  shift, and go to state 48
    T_WRITE  shift, and go to state 49

    N_ARRAYVAR   go to state 50
    N_ASSIGN     go to state 51
    N_COMPOUND   go to state 52
    N_CONDITION  go to state 53
    N_ENTIREVAR  go to state 54
    N_IDXVAR     go to state 55
    N_PROCIDENT  go to state 56
    N_PROCSTMT   go to state 57
    N_READ       go to state 58
    N_STMT       go to state 100
    N_VARIABLE   go to state 60
    N_VARIDENT   go to state 61
    N_WHILE      go to state 62
    N_WRITE      go to state 63


State 72

   12 N_COMPOUND: T_BEGIN N_STMT N_STMTLST . T_END

    T_END  shift, and go to state 101


State 73

    7 N_ASSIGN: N_VARIABLE $@1 . T_ASSIGN N_EXPR

    T_ASSIGN  shift, and go to state 102


State 74

   63 N_SIGN: T_PLUS .

    $default  reduce using rule 63 (N_SIGN)


State 75

   64 N_SIGN: T_MINUS .

    $default  reduce using rule 64 (N_SIGN)


State 76

   34 N_IDXRANGE: N_IDX . T_DOTDOT N_IDX

    T_DOTDOT  shift, and go to state 103


State 77

    4 N_ARRAY: T_ARRAY T_LBRACK N_IDXRANGE . T_RBRACK T_OF N_SIMPLE

    T_RBRACK  shift, and go to state 104


State 78

   33 N_IDX: N_INTCONST .

    $default  reduce using rule 33 (N_IDX)


State 79

   40 N_INTCONST: N_SIGN . T_INTCONST

    T_INTCONST  shift, and go to state 105


State 80

   28 N_FACTOR: T_LPAREN . N_EXPR T_RPAREN

    T_LPAREN     shift, and go to state 80
    T_PLUS       shift, and go to state 74
    T_MINUS      shift, and go to state 75
    T_CHARCONST  shift, and go to state 81
    T_FALSE      shift, and go to state 82
    T_NOT        shift, and go to state 83
    T_TRUE       shift, and go to state 84

    $default  reduce using rule 62 (N_SIGN)

    N_BOOLCONST   go to state 85
    N_CONST       go to state 86
    N_EXPR        go to state 106
    N_FACTOR      go to state 88
    N_INTCONST    go to state 89
    N_SIGN        go to state 90
    N_SIMPLEEXPR  go to state 91
    N_TERM        go to state 92


State 81

   21 N_CONST: T_CHARCONST .

    $default  reduce using rule 21 (N_CONST)


State 82

   11 N_BOOLCONST: T_FALSE .

    $default  reduce using rule 11 (N_BOOLCONST)


State 83

   29 N_FACTOR: T_NOT . N_FACTOR

    T_LPAREN     shift, and go to state 80
    T_PLUS       shift, and go to state 74
    T_MINUS      shift, and go to state 75
    T_CHARCONST  shift, and go to state 81
    T_FALSE      shift, and go to state 82
    T_NOT        shift, and go to state 83
    T_TRUE       shift, and go to state 84

    $default  reduce using rule 62 (N_SIGN)

    N_BOOLCONST  go to state 85
    N_CONST      go to state 86
    N_FACTOR     go to state 107
    N_INTCONST   go to state 89
    N_SIGN       go to state 90


State 84

   10 N_BOOLCONST: T_TRUE .

    $default  reduce using rule 10 (N_BOOLCONST)


State 85

   22 N_CONST: N_BOOLCONST .

    $default  reduce using rule 22 (N_CONST)


State 86

   27 N_FACTOR: N_CONST .

    $default  reduce using rule 27 (N_FACTOR)


State 87

   15 N_CONDITION: T_IF $@3 N_EXPR . $@4 N_THEN

    $default  reduce using rule 14 ($@4)

    $@4  go to state 108


State 88

   79 N_TERM: N_FACTOR . N_MULTOPLST

    T_MULT  shift, and go to state 109
    T_AND   shift, and go to state 110
    T_DIV   shift, and go to state 111

    $default  reduce using rule 41 (N_MULTOPLST)

    N_MULTOPLST           go to state 112
    N_MULTOP              go to state 113
    N_MULT_OP_LOGICAL     go to state 114
    N_MULT_OP_ARITHMETIC  go to state 115


State 89

   20 N_CONST: N_INTCONST .

    $default  reduce using rule 20 (N_CONST)


State 90

   26 N_FACTOR: N_SIGN . N_VARIABLE
   40 N_INTCONST: N_SIGN . T_INTCONST

    T_IDENT     shift, and go to state 93
    T_INTCONST  shift, and go to state 105

    N_ARRAYVAR   go to state 50
    N_ENTIREVAR  go to state 54
    N_IDXVAR     go to state 55
    N_VARIABLE   go to state 116
    N_VARIDENT   go to state 61


State 91

   24 N_EXPR: N_SIMPLEEXPR .
   25       | N_SIMPLEEXPR . N_RELOP N_SIMPLEEXPR

    T_LT  shift, and go to state 117
    T_LE  shift, and go to state 118
    T_NE  shift, and go to state 119
    T_EQ  shift, and go to state 120
    T_GT  shift, and go to state 121
    T_GE  shift, and go to state 122

    $default  reduce using rule 24 (N_EXPR)

    N_RELOP  go to state 123


State 92

   68 N_SIMPLEEXPR: N_TERM . N_ADDOPLST

    T_PLUS   shift, and go to state 124
    T_MINUS  shift, and go to state 125
    T_OR     shift, and go to state 126

    $default  reduce using rule 2 (N_ADDOPLST)

    N_ADDOPLST           go to state 127
    N_ADDOP              go to state 128
    N_ADD_OP_LOGICAL     go to state 129
    N_ADD_OP_ARITHMETIC  go to state 130


State 93

   89 N_VARIDENT: T_IDENT .

    $default  reduce using rule 89 (N_VARIDENT)


State 94

   55 N_READ: T_READ T_LPAREN N_INPUTVAR . N_INPUTLST T_RPAREN

    T_COMMA  shift, and go to state 131

    $default  reduce using rule 37 (N_INPUTLST)

    N_INPUTLST  go to state 132


State 95

   39 N_INPUTVAR: N_VARIABLE .

    $default  reduce using rule 39 (N_INPUTVAR)


State 96

   92 N_WHILE: T_WHILE $@8 N_EXPR . $@9 T_DO N_STMT

    $default  reduce using rule 91 ($@9)

    $@9  go to state 133


State 97

   43 N_OUTPUT: N_EXPR .

    $default  reduce using rule 43 (N_OUTPUT)


State 98

   93 N_WRITE: T_WRITE T_LPAREN N_OUTPUT . N_OUTPUTLST T_RPAREN

    T_COMMA  shift, and go to state 134

    $default  reduce using rule 44 (N_OUTPUTLST)

    N_OUTPUTLST  go to state 135


State 99

   36 N_IDXVAR: N_ARRAYVAR $@6 T_LBRACK . N_EXPR T_RBRACK

    T_LPAREN     shift, and go to state 80
    T_PLUS       shift, and go to state 74
    T_MINUS      shift, and go to state 75
    T_CHARCONST  shift, and go to state 81
    T_FALSE      shift, and go to state 82
    T_NOT        shift, and go to state 83
    T_TRUE       shift, and go to state 84

    $default  reduce using rule 62 (N_SIGN)

    N_BOOLCONST   go to state 85
    N_CONST       go to state 86
    N_EXPR        go to state 136
    N_FACTOR      go to state 88
    N_INTCONST    go to state 89
    N_SIGN        go to state 90
    N_SIMPLEEXPR  go to state 91
    N_TERM        go to state 92


State 100

   77 N_STMTLST: T_SCOLON N_STMT . N_STMTLST

    T_SCOLON  shift, and go to state 71

    $default  reduce using rule 76 (N_STMTLST)

    N_STMTLST  go to state 137


State 101

   12 N_COMPOUND: T_BEGIN N_STMT N_STMTLST T_END .

    $default  reduce using rule 12 (N_COMPOUND)


State 102

    7 N_ASSIGN: N_VARIABLE $@1 T_ASSIGN . N_EXPR

    T_LPAREN     shift, and go to state 80
    T_PLUS       shift, and go to state 74
    T_MINUS      shift, and go to state 75
    T_CHARCONST  shift, and go to state 81
    T_FALSE      shift, and go to state 82
    T_NOT        shift, and go to state 83
    T_TRUE       shift, and go to state 84

    $default  reduce using rule 62 (N_SIGN)

    N_BOOLCONST   go to state 85
    N_CONST       go to state 86
    N_EXPR        go to state 138
    N_FACTOR      go to state 88
    N_INTCONST    go to state 89
    N_SIGN        go to state 90
    N_SIMPLEEXPR  go to state 91
    N_TERM        go to state 92


State 103

   34 N_IDXRANGE: N_IDX T_DOTDOT . N_IDX

    T_PLUS   shift, and go to state 74
    T_MINUS  shift, and go to state 75

    $default  reduce using rule 62 (N_SIGN)

    N_IDX       go to state 139
    N_INTCONST  go to state 78
    N_SIGN      go to state 79


State 104

    4 N_ARRAY: T_ARRAY T_LBRACK N_IDXRANGE T_RBRACK . T_OF N_SIMPLE

    T_OF  shift, and go to state 140


State 105

   40 N_INTCONST: N_SIGN T_INTCONST .

    $default  reduce using rule 40 (N_INTCONST)


State 106

   28 N_FACTOR: T_LPAREN N_EXPR . T_RPAREN

    T_RPAREN  shift, and go to state 141


State 107

   29 N_FACTOR: T_NOT N_FACTOR .

    $default  reduce using rule 29 (N_FACTOR)


State 108

   15 N_CONDITION: T_IF $@3 N_EXPR $@4 . N_THEN

    T_THEN  shift, and go to state 142

    N_THEN  go to state 143


State 109

  102 N_MULT_OP_ARITHMETIC: T_MULT .

    $default  reduce using rule 102 (N_MULT_OP_ARITHMETIC)


State 110

  101 N_MULT_OP_LOGICAL: T_AND .

    $default  reduce using rule 101 (N_MULT_OP_LOGICAL)


State 111

  103 N_MULT_OP_ARITHMETIC: T_DIV .

    $default  reduce using rule 103 (N_MULT_OP_ARITHMETIC)


State 112

   79 N_TERM: N_FACTOR N_MULTOPLST .

    $default  reduce using rule 79 (N_TERM)


State 113

   42 N_MULTOPLST: N_MULTOP . N_FACTOR N_MULTOPLST

    T_LPAREN     shift, and go to state 80
    T_PLUS       shift, and go to state 74
    T_MINUS      shift, and go to state 75
    T_CHARCONST  shift, and go to state 81
    T_FALSE      shift, and go to state 82
    T_NOT        shift, and go to state 83
    T_TRUE       shift, and go to state 84

    $default  reduce using rule 62 (N_SIGN)

    N_BOOLCONST  go to state 85
    N_CONST      go to state 86
    N_FACTOR     go to state 144
    N_INTCONST   go to state 89
    N_SIGN       go to state 90


State 114

   99 N_MULTOP: N_MULT_OP_LOGICAL .

    $default  reduce using rule 99 (N_MULTOP)


State 115

  100 N_MULTOP: N_MULT_OP_ARITHMETIC .

    $default  reduce using rule 100 (N_MULTOP)


State 116

   26 N_FACTOR: N_SIGN N_VARIABLE .

    $default  reduce using rule 26 (N_FACTOR)


State 117

   56 N_RELOP: T_LT .

    $default  reduce using rule 56 (N_RELOP)


State 118

   58 N_RELOP: T_LE .

    $default  reduce using rule 58 (N_RELOP)


State 119

   61 N_RELOP: T_NE .

    $default  reduce using rule 61 (N_RELOP)


State 120

   60 N_RELOP: T_EQ .

    $default  reduce using rule 60 (N_RELOP)


State 121

   57 N_RELOP: T_GT .

    $default  reduce using rule 57 (N_RELOP)


State 122

   59 N_RELOP: T_GE .

    $default  reduce using rule 59 (N_RELOP)


State 123

   25 N_EXPR: N_SIMPLEEXPR N_RELOP . N_SIMPLEEXPR

    T_LPAREN     shift, and go to state 80
    T_PLUS       shift, and go to state 74
    T_MINUS      shift, and go to state 75
    T_CHARCONST  shift, and go to state 81
    T_FALSE      shift, and go to state 82
    T_NOT        shift, and go to state 83
    T_TRUE       shift, and go to state 84

    $default  reduce using rule 62 (N_SIGN)

    N_BOOLCONST   go to state 85
    N_CONST       go to state 86
    N_FACTOR      go to state 88
    N_INTCONST    go to state 89
    N_SIGN        go to state 90
    N_SIMPLEEXPR  go to state 145
    N_TERM        go to state 92


State 124

   97 N_ADD_OP_ARITHMETIC: T_PLUS .

    $default  reduce using rule 97 (N_ADD_OP_ARITHMETIC)


State 125

   98 N_ADD_OP_ARITHMETIC: T_MINUS .

    $default  reduce using rule 98 (N_ADD_OP_ARITHMETIC)


State 126

   96 N_ADD_OP_LOGICAL: T_OR .

    $default  reduce using rule 96 (N_ADD_OP_LOGICAL)


State 127

   68 N_SIMPLEEXPR: N_TERM N_ADDOPLST .

    $default  reduce using rule 68 (N_SIMPLEEXPR)


State 128

    3 N_ADDOPLST: N_ADDOP . N_TERM N_ADDOPLST

    T_LPAREN     shift, and go to state 80
    T_PLUS       shift, and go to state 74
    T_MINUS      shift, and go to state 75
    T_CHARCONST  shift, and go to state 81
    T_FALSE      shift, and go to state 82
    T_NOT        shift, and go to state 83
    T_TRUE       shift, and go to state 84

    $default  reduce using rule 62 (N_SIGN)

    N_BOOLCONST  go to state 85
    N_CONST      go to state 86
    N_FACTOR     go to state 88
    N_INTCONST   go to state 89
    N_SIGN       go to state 90
    N_TERM       go to state 146


State 129

   94 N_ADDOP: N_ADD_OP_LOGICAL .

    $default  reduce using rule 94 (N_ADDOP)


State 130

   95 N_ADDOP: N_ADD_OP_ARITHMETIC .

    $default  reduce using rule 95 (N_ADDOP)


State 131

   38 N_INPUTLST: T_COMMA . N_INPUTVAR N_INPUTLST

    T_IDENT  shift, and go to state 93

    N_ARRAYVAR   go to state 50
    N_ENTIREVAR  go to state 54
    N_IDXVAR     go to state 55
    N_INPUTVAR   go to state 147
    N_VARIABLE   go to state 95
    N_VARIDENT   go to state 61


State 132

   55 N_READ: T_READ T_LPAREN N_INPUTVAR N_INPUTLST . T_RPAREN

    T_RPAREN  shift, and go to state 148


State 133

   92 N_WHILE: T_WHILE $@8 N_EXPR $@9 . T_DO N_STMT

    T_DO  shift, and go to state 149


State 134

   45 N_OUTPUTLST: T_COMMA . N_OUTPUT N_OUTPUTLST

    T_LPAREN     shift, and go to state 80
    T_PLUS       shift, and go to state 74
    T_MINUS      shift, and go to state 75
    T_CHARCONST  shift, and go to state 81
    T_FALSE      shift, and go to state 82
    T_NOT        shift, and go to state 83
    T_TRUE       shift, and go to state 84

    $default  reduce using rule 62 (N_SIGN)

    N_BOOLCONST   go to state 85
    N_CONST       go to state 86
    N_EXPR        go to state 97
    N_FACTOR      go to state 88
    N_INTCONST    go to state 89
    N_OUTPUT      go to state 150
    N_SIGN        go to state 90
    N_SIMPLEEXPR  go to state 91
    N_TERM        go to state 92


State 135

   93 N_WRITE: T_WRITE T_LPAREN N_OUTPUT N_OUTPUTLST . T_RPAREN

    T_RPAREN  shift, and go to state 151


State 136

   36 N_IDXVAR: N_ARRAYVAR $@6 T_LBRACK N_EXPR . T_RBRACK

    T_RBRACK  shift, and go to state 152


State 137

   77 N_STMTLST: T_SCOLON N_STMT N_STMTLST .

    $default  reduce using rule 77 (N_STMTLST)


State 138

    7 N_ASSIGN: N_VARIABLE $@1 T_ASSIGN N_EXPR .

    $default  reduce using rule 7 (N_ASSIGN)


State 139

   34 N_IDXRANGE: N_IDX T_DOTDOT N_IDX .

    $default  reduce using rule 34 (N_IDXRANGE)


State 140

    4 N_ARRAY: T_ARRAY T_LBRACK N_IDXRANGE T_RBRACK T_OF . N_SIMPLE

    T_BOOL  shift, and go to state 38
    T_CHAR  shift, and go to state 39
    T_INT   shift, and go to state 40

    N_SIMPLE  go to state 153


State 141

   28 N_FACTOR: T_LPAREN N_EXPR T_RPAREN .

    $default  reduce using rule 28 (N_FACTOR)


State 142

   16 N_THEN: T_THEN . N_STMT
   17       | T_THEN . N_STMT N_ELSE

    T_BEGIN  shift, and go to state 33
    T_IDENT  shift, and go to state 45
    T_IF     shift, and go to state 46
    T_READ   shift, and go to state 47
    T_WHILE  shift, and go to state 48
    T_WRITE  shift, and go to state 49

    N_ARRAYVAR   go to state 50
    N_ASSIGN     go to state 51
    N_COMPOUND   go to state 52
    N_CONDITION  go to state 53
    N_ENTIREVAR  go to state 54
    N_IDXVAR     go to state 55
    N_PROCIDENT  go to state 56
    N_PROCSTMT   go to state 57
    N_READ       go to state 58
    N_STMT       go to state 154
    N_VARIABLE   go to state 60
    N_VARIDENT   go to state 61
    N_WHILE      go to state 62
    N_WRITE      go to state 63


State 143

   15 N_CONDITION: T_IF $@3 N_EXPR $@4 N_THEN .

    $default  reduce using rule 15 (N_CONDITION)


State 144

   42 N_MULTOPLST: N_MULTOP N_FACTOR . N_MULTOPLST

    T_MULT  shift, and go to state 109
    T_AND   shift, and go to state 110
    T_DIV   shift, and go to state 111

    $default  reduce using rule 41 (N_MULTOPLST)

    N_MULTOPLST           go to state 155
    N_MULTOP              go to state 113
    N_MULT_OP_LOGICAL     go to state 114
    N_MULT_OP_ARITHMETIC  go to state 115


State 145

   25 N_EXPR: N_SIMPLEEXPR N_RELOP N_SIMPLEEXPR .

    $default  reduce using rule 25 (N_EXPR)


State 146

    3 N_ADDOPLST: N_ADDOP N_TERM . N_ADDOPLST

    T_PLUS   shift, and go to state 124
    T_MINUS  shift, and go to state 125
    T_OR     shift, and go to state 126

    $default  reduce using rule 2 (N_ADDOPLST)

    N_ADDOPLST           go to state 156
    N_ADDOP              go to state 128
    N_ADD_OP_LOGICAL     go to state 129
    N_ADD_OP_ARITHMETIC  go to state 130


State 147

   38 N_INPUTLST: T_COMMA N_INPUTVAR . N_INPUTLST

    T_COMMA  shift, and go to state 131

    $default  reduce using rule 37 (N_INPUTLST)

    N_INPUTLST  go to state 157


State 148

   55 N_READ: T_READ T_LPAREN N_INPUTVAR N_INPUTLST T_RPAREN .

    $default  reduce using rule 55 (N_READ)


State 149

   92 N_WHILE: T_WHILE $@8 N_EXPR $@9 T_DO . N_STMT

    T_BEGIN  shift, and go to state 33
    T_IDENT  shift, and go to state 45
    T_IF     shift, and go to state 46
    T_READ   shift, and go to state 47
    T_WHILE  shift, and go to state 48
    T_WRITE  shift, and go to state 49

    N_ARRAYVAR   go to state 50
    N_ASSIGN     go to state 51
    N_COMPOUND   go to state 52
    N_CONDITION  go to state 53
    N_ENTIREVAR  go to state 54
    N_IDXVAR     go to state 55
    N_PROCIDENT  go to state 56
    N_PROCSTMT   go to state 57
    N_READ       go to state 58
    N_STMT       go to state 158
    N_VARIABLE   go to state 60
    N_VARIDENT   go to state 61
    N_WHILE      go to state 62
    N_WRITE      go to state 63


State 150

   45 N_OUTPUTLST: T_COMMA N_OUTPUT . N_OUTPUTLST

    T_COMMA  shift, and go to state 134

    $default  reduce using rule 44 (N_OUTPUTLST)

    N_OUTPUTLST  go to state 159


State 151

   93 N_WRITE: T_WRITE T_LPAREN N_OUTPUT N_OUTPUTLST T_RPAREN .

    $default  reduce using rule 93 (N_WRITE)


State 152

   36 N_IDXVAR: N_ARRAYVAR $@6 T_LBRACK N_EXPR T_RBRACK .

    $default  reduce using rule 36 (N_IDXVAR)


State 153

    4 N_ARRAY: T_ARRAY T_LBRACK N_IDXRANGE T_RBRACK T_OF N_SIMPLE .

    $default  reduce using rule 4 (N_ARRAY)


State 154

   16 N_THEN: T_THEN N_STMT .
   17       | T_THEN N_STMT . N_ELSE

    T_ELSE  shift, and go to state 160

    $default  reduce using rule 16 (N_THEN)

    N_ELSE  go to state 161


State 155

   42 N_MULTOPLST: N_MULTOP N_FACTOR N_MULTOPLST .

    $default  reduce using rule 42 (N_MULTOPLST)


State 156

    3 N_ADDOPLST: N_ADDOP N_TERM N_ADDOPLST .

    $default  reduce using rule 3 (N_ADDOPLST)


State 157

   38 N_INPUTLST: T_COMMA N_INPUTVAR N_INPUTLST .

    $default  reduce using rule 38 (N_INPUTLST)


State 158

   92 N_WHILE: T_WHILE $@8 N_EXPR $@9 T_DO N_STMT .

    $default  reduce using rule 92 (N_WHILE)


State 159

   45 N_OUTPUTLST: T_COMMA N_OUTPUT N_OUTPUTLST .

    $default  reduce using rule 45 (N_OUTPUTLST)


State 160

   19 N_ELSE: T_ELSE . $@5 N_STMT

    $default  reduce using rule 18 ($@5)

    $@5  go to state 162


State 161

   17 N_THEN: T_THEN N_STMT N_ELSE .

    $default  reduce using rule 17 (N_THEN)


State 162

   19 N_ELSE: T_ELSE $@5 . N_STMT

    T_BEGIN  shift, and go to state 33
    T_IDENT  shift, and go to state 45
    T_IF     shift, and go to state 46
    T_READ   shift, and go to state 47
    T_WHILE  shift, and go to state 48
    T_WRITE  shift, and go to state 49

    N_ARRAYVAR   go to state 50
    N_ASSIGN     go to state 51
    N_COMPOUND   go to state 52
    N_CONDITION  go to state 53
    N_ENTIREVAR  go to state 54
    N_IDXVAR     go to state 55
    N_PROCIDENT  go to state 56
    N_PROCSTMT   go to state 57
    N_READ       go to state 58
    N_STMT       go to state 163
    N_VARIABLE   go to state 60
    N_VARIDENT   go to state 61
    N_WHILE      go to state 62
    N_WRITE      go to state 63


State 163

   19 N_ELSE: T_ELSE $@5 N_STMT .

    $default  reduce using rule 19 (N_ELSE)
